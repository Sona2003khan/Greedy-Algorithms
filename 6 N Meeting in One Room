import java.util.Arrays;

public class Greedy_N_Meeting_in_one_room_6 {
    
    public static int n_meeting_in_one_room(int start[], int end[]) {
        int n = start.length;

        int meeting[][] = new int[n][2];
        for (int i = 0; i < n; i++) {
            meeting[i][0] = start[i];
            meeting[i][1] = end[i];
        }

        Arrays.sort(meeting, (a, b) -> a[1] - b[1]);

        int count = 1;
        int last_end = meeting[0][1];

        for (int i = 1; i < n; i++) {
            if (meeting[i][0] > last_end) {
                count++;
                last_end = meeting[i][1];
            }
        }
        return count;
    }

    public static void main(String[] args) {
        int start[] = {1, 3, 0, 5, 8, 5};
        int end[] = {2, 4, 6, 7, 9, 9};

        int result = n_meeting_in_one_room(start, end);
        System.out.println(result);
    }
}

// Time Complexity: O(n log n)
// Space Complexity: O(n)
